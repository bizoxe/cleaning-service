[tool.poetry]
name = "cleaning-service"
version = "0.1.0"
description = ""
authors = ["alexander <alex.matveev.dev@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
pydantic-settings = "^2.7.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.36"}
asyncpg = "^0.30.0"
alembic = "^1.14.0"
orjson = "^3.10.13"
asgi-lifespan = "^2.1.0"
psycopg = {extras = ["binary", "pool"], version = "^3.2.3"}
pyjwt = {extras = ["crypto"], version = "^2.10.1"}
bcrypt = "^4.2.1"
fastapi = "^0.115.6"
uvicorn = "^0.34.0"
email-validator = "^2.2.0"
python-multipart = "^0.0.20"
async-typer = "^0.1.8"
httpx = "^0.28.1"
gunicorn = "^23.0.0"
cryptography = "^44.0.0"


[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
mypy = "^1.14.0"
pytest = "^8.3.4"
pytest-asyncio = "^0.25.1"
pytest-postgresql = "^6.1.1"
pre-commit = "^4.1.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

[tool.mypy]
strict = true

[tool.black]
line-length = 119
target-version = ["py312"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | venv
  | \.env
  | \.flake8
)/
'''

[tool.isort]
profile = "black"
line_length = 119
multi_line_output = 3
include_trailing_comma = true
split_on_trailing_comma = true
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["fastapi-application"]

[tool.flake8]
ignore = ['E231', 'E241']
per-file-ignores = [
    '__init__.py:F401',
]
max-line-length = 119
max-complexity = 8
count = true
extend-immutable-calls = [
    "Query",
    "Depends",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
