version: 1
disable_existing_loggers: false
formatters:
  standard:
    format: '[%(levelname)s|%(module)s|L%(lineno)d] %(asctime)s: %(message)s'
    datefmt: '%Y-%m-%dT%H:%M:%S%z'
  json:
    (): utils.custom_logger.json_formatter.JsonFormatter
    fmt_keys:
      level: levelname
      message: message
      timestamp: timestamp
      logger: name
      module: module
      function: funcName
      line: lineno
      thread_name: threadName

filters:
  no_errors:
    (): utils.custom_logger.filters.NonErrorFilter

handlers:

  console:
    class: logging.StreamHandler
    level: DEBUG
    stream: ext://sys.stdout

  info_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    filename: logs/info_log.jsonl
    maxBytes: 10485760 # 10MB
    backupCount: 5
    encoding: utf8
    filters:
      - no_errors

  error_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    filename: logs/error_log.jsonl
    maxBytes: 10485760 # 10MB
    backupCount: 5
    encoding: utf8

  queue_handler:
    class: logging.handlers.QueueHandler
    listener: logging.handlers.QueueListener
    formatter: json
    queue:
      (): queue.Queue
      maxsize: 1000
    level: DEBUG
    handlers:
      - console
    respect_handler_level: true


root:
  level: WARNING
  handlers:
    - queue_handler
  propagate: no

loggers:

  main:
    level: NOTSET
    handlers:
      - queue_handler
    propagate: false

  uvicorn:
    level: INFO
    handlers:
      - queue_handler
    propagate: false

  uvicorn.access:
    level: ERROR
    handlers:
      - queue_handler
    propagate: false
