upstream serve_fastapi {
    server app:${API_URL};
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name $hostname;
    server_tokens off;
    large_client_header_buffers 4 32k;

    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header Cache-Control "max-age=0, no-cache, must-revalidate";
    add_header Pragma "no-cache";

    location / {

        if ( $request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|PATCH|DELETE)$ ) {
        return 444;
        }

        if ($http_origin ~* '^https?://(localhost|www\.yourdomain\.com|www\.yourotherdomain\.com)$') {
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With' always;
        add_header 'Access-Control-Expose-Headers' 'Authorization' always;

        set $cors A;
        }

        if ($request_method = 'OPTIONS') {
        set $cors "${cors}B";
        }

        if ($cors = 'AB') {
        add_header 'Access-Control-Allow-Origin' "$http_origin";
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With';

        return 204;
        }

        proxy_pass http://serve_fastapi;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
    }

    location /health {
        add_header Content-Type application/json;
        return 200 '{"project": "redirect", "time": "${msec}"}';
    }
}
